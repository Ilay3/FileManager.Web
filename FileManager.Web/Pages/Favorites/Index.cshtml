@page "/Favorites"
@model FileManager.Web.Pages.Favorites.IndexModel
@attribute [Microsoft.AspNetCore.Authorization.Authorize]
@{
    ViewData["Title"] = "Избранное";
}

<div class="container mt-4">
    <h2 class="mb-4">@ViewData["Title"]</h2>

    @if (Model.Favorites.Count == 0)
    {
        <div class="alert alert-info">У вас пока нет избранных элементов.</div>
    }
    else
    {
        <ul class="list-group">
        @foreach (var item in Model.Favorites)
        {
            <li class="list-group-item d-flex justify-content-between align-items-center">
                <div>
                    @if (item.Type == "file")
                    {
                        <i class="bi bi-file-earmark me-2"></i>
                        <a href="/api/files/@item.Id/content">@item.Name</a>
                    }
                    else
                    {
                        <i class="bi bi-folder me-2"></i>
                        <a href="/Files?folderId=@item.Id">@item.Name</a>
                    }
                </div>
                <button class="btn btn-sm btn-outline-danger" title="Удалить из избранного" onclick="removeFavorite('@item.Id','@item.Type')">
                    <i class="bi bi-x-lg"></i>
                </button>
            </li>
        }
        </ul>
    }
</div>

@section Scripts {
<script>
async function removeFavorite(id, type) {
    const url = type === 'file' ? `/api/favorites/files/${id}` : `/api/favorites/folders/${id}`;
    const response = await fetch(url, { method: 'DELETE' });
    if (response.ok) {
        location.reload();
    } else {
        alert('Не удалось удалить из избранного');
    }
}
</script>
}
