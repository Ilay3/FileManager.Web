@page "/Admin/Logs"
@model FileManager.Web.Pages.Admin.LogsModel
@attribute [Microsoft.AspNetCore.Authorization.Authorize]
@using FileManager.Domain.Enums
@{
    ViewData["Title"] = "Журнал действий";

    if (User.FindFirst("IsAdmin")?.Value != "True")
    {
        Response.Redirect("/Files");
        return;
    }
}

<h1>Журнал действий</h1>

<form method="get" class="mb-3">
    <div class="row g-2">
        <div class="col-md-3">
            <label class="form-label">С даты</label>
            <input type="date" class="form-control" name="From" value="@Model.From?.ToString("yyyy-MM-dd")" />
        </div>
        <div class="col-md-3">
            <label class="form-label">По дату</label>
            <input type="date" class="form-control" name="To" value="@Model.To?.ToString("yyyy-MM-dd")" />
        </div>
        <div class="col-md-3">
            <label class="form-label">Пользователь</label>
            <select class="form-select" name="UserId">
                <option value="">Все</option>
                @foreach (var u in Model.Users)
                {
                    <option value="@u.Id" selected="@(Model.UserId == u.Id ? "selected" : null)">@u.Email</option>
                }
            </select>
        </div>
        <div class="col-md-3">
            <label class="form-label">Действие</label>
            <select class="form-select" name="Action">
                <option value="">Все</option>
                @foreach (var act in Enum.GetValues(typeof(AuditAction)).Cast<AuditAction>())
                {
                    <option value="@act" selected="@(Model.Action == act ? "selected" : null)">@Translate(act)</option>
                }
            </select>
        </div>
    </div>
    <div class="mt-3">
        <button type="submit" class="btn btn-primary">Фильтровать</button>
    </div>
</form>

<table class="table table-striped table-hover">
    <thead>
        <tr>
            <th>Дата</th>
            <th>Пользователь</th>
            <th>Действие</th>
            <th>Объект</th>
            <th>Описание</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var log in Model.Logs)
        {
            <tr>
                <td>@log.CreatedAt.ToLocalTime()</td>
                <td>@(log.User?.Email ?? "-")</td>
                <td>@Translate(log.Action)</td>
                <td>
                    @if (log.File != null)
                    {
                        @("Файл: " + log.File.Name)
                    }
                    else if (log.Folder != null)
                    {
                        @("Папка: " + log.Folder.Name)
                    }
                    else
                    {
                        @("-")
                    }
                </td>
                <td>@log.Description</td>
            </tr>
        }
    </tbody>

</table>

@functions {
    private string Translate(AuditAction action) => action switch
    {
        AuditAction.Login => "Вход",
        AuditAction.Logout => "Выход",
        AuditAction.FileUpload => "Загрузка файла",
        AuditAction.FileDownload => "Скачивание файла",
        AuditAction.FileView => "Просмотр файла",
        AuditAction.FileEdit => "Редактирование файла",
        AuditAction.FileDelete => "Удаление файла",
        AuditAction.FileRestore => "Восстановление файла",
        AuditAction.FilePreview => "Предпросмотр файла",
        AuditAction.FileOpenForEdit => "Открытие для редактирования",
        AuditAction.FolderCreate => "Создание папки",
        AuditAction.FolderDelete => "Удаление папки",
        AuditAction.FolderRename => "Переименование папки",
        AuditAction.FolderMove => "Перемещение папки",
        AuditAction.FolderRestore => "Восстановление папки",
        AuditAction.AccessGranted => "Предоставление доступа",
        AuditAction.AccessRevoked => "Отзыв доступа",
        AuditAction.AccessChanged => "Изменение доступа",
        AuditAction.Error => "Ошибка",
        AuditAction.UnauthorizedAccess => "Неавторизованный доступ",
        _ => action.ToString()
    };
}

