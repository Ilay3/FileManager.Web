@page "/Files"
@model FileManager.Web.Pages.Files.IndexModel
@using FileManager.Domain.Enums
@attribute [Microsoft.AspNetCore.Authorization.Authorize]
@{
    ViewData["Title"] = "Документы";
}

<div class="files-wrapper">

    <!-- Breadcrumbs -->
    @if (Model.Breadcrumbs.Any())
    {
        <div class="breadcrumbs">
            @for (int i = 0; i < Model.Breadcrumbs.Count; i++)
            {
                var breadcrumb = Model.Breadcrumbs[i];
                <span class="breadcrumb-item">
                    @if (i == Model.Breadcrumbs.Count - 1)
                    {
                        <span><i class="@breadcrumb.Icon"></i> @breadcrumb.Name</span>
                    }
                    else
                    {
                        <a href="?folderId=@breadcrumb.Id"><i class="@breadcrumb.Icon"></i> @breadcrumb.Name</a>
                        <span class="breadcrumb-separator">/</span>
                    }
                </span>
            }
        </div>
    }

    <div class="action-bar">
        <button type="button" id="btnUpload" class="btn btn-primary btn-sm"><i class="bi bi-upload"></i> Загрузить</button>
        <button type="button" id="btnCreateFolder" class="btn btn-primary btn-sm"><i class="bi bi-folder-plus"></i> Создать папку</button>
        <button type="button" id="btnManageAccess" class="btn btn-primary btn-sm"><i class="bi bi-shield-lock"></i> Управление доступом</button>
    </div>

    <!-- Поиск и фильтры удалены -->

    <!-- Content Area -->
    <div class="content-area">
        <div class="grid-view">
            @await Html.PartialAsync("_FilesGrid", Model.GridItems)
        </div>
    </div>

    <!-- Pagination -->
    @if (Model.FilesResult.TotalPages > 1)
    {
        <div class="pagination">
            @if (Model.FilesResult.HasPreviousPage)
            {
                <a href="?page=@(Model.FilesResult.CurrentPage - 1)&folderId=@Model.CurrentFolderId" class="btn btn-secondary btn-sm">← Предыдущая</a>
            }

            <span class="pagination-info">
                Страница @Model.FilesResult.CurrentPage из @Model.FilesResult.TotalPages
                (всего: @Model.FilesResult.TotalCount)
            </span>

            @if (Model.FilesResult.HasNextPage)
            {
                <a href="?page=@(Model.FilesResult.CurrentPage + 1)&folderId=@Model.CurrentFolderId" class="btn btn-secondary btn-sm">Следующая →</a>
            }
        </div>
    }
</div>

@await Html.PartialAsync("_FolderModals")
@await Html.PartialAsync("_UploadModal")
@await Html.PartialAsync("_AccessModal")
@await Html.PartialAsync("_PropertiesModal")
<div id="contextMenu" class="context-menu">
    <ul>
        <li data-action="upload" title="Загрузить"><i class="bi bi-upload"></i> Загрузить</li>
        <li data-action="create-folder" title="Создать папку"><i class="bi bi-folder-plus"></i> Создать папку</li>
        <li data-action="manage-access" title="Управление доступом"><i class="bi bi-shield-lock"></i> Управление доступом</li>
        <li data-action="preview" title="Предпросмотр"><i class="bi bi-eye"></i> Предпросмотр</li>
        <li data-action="edit" title="Редактировать"><i class="bi bi-pencil"></i> Редактировать</li>
        <li data-action="rename" title="Переименовать"><i class="bi bi-pencil-square"></i> Переименовать</li>
        <li data-action="download" title="Скачать"><i class="bi bi-download"></i> Скачать</li>
        <li data-action="access" title="Доступ"><i class="bi bi-person-lock"></i> Доступ</li>
        <li data-action="delete" title="Удалить"><i class="bi bi-trash"></i> Удалить</li>
        <li data-action="properties" title="Свойства"><i class="bi bi-info-circle"></i> Свойства</li>
    </ul>
</div>

