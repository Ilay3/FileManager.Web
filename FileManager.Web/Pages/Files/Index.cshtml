@page "/Files"
@model FileManager.Web.Pages.Files.IndexModel
@attribute [Microsoft.AspNetCore.Authorization.Authorize]
@{
    ViewData["Title"] = "Документы";
}

<div class="files-wrapper">
    <!-- Toolbar -->
    <div class="toolbar">
        <div class="toolbar-left">
            <button class="btn btn-primary" onclick="openUploadModal('@Model.CurrentFolderId')">
                📤 Загрузить файл
            </button>
            <button class="btn btn-secondary" onclick="createFolder('@Model.CurrentFolderId')">
                📁 Создать папку
            </button>
            <button class="btn btn-secondary" id="downloadSelected" onclick="downloadSelected()" disabled>
                ⬇️ Скачать выбранные
            </button>
        </div>

        <div class="toolbar-center">
            <div class="search-container">
                <input type="text" id="searchInput" placeholder="Поиск файлов и папок..." class="search-input"
                       value="@Model.SearchRequest.SearchTerm" />
                <button type="button" id="searchBtn" class="btn btn-search">🔍</button>
            </div>
        </div>

        <div class="toolbar-right">
            <div class="view-controls">
                <button class="btn @(Model.ViewMode == "list" ? "btn-active" : "")" onclick="changeView('list')" title="Список">
                    📄
                </button>
                <button class="btn @(Model.ViewMode == "tree" ? "btn-active" : "")" onclick="changeView('tree')" title="Дерево">
                    🌳
                </button>
                <button class="btn @(Model.ViewMode == "grid" ? "btn-active" : "")" onclick="changeView('grid')" title="Сетка">
                    ⚏
                </button>
            </div>

            <div class="filter-controls">
                <select id="filterType" class="form-select">
                    <option value="">Все типы</option>
                    <option value="Document">Документы</option>
                    <option value="Spreadsheet">Таблицы</option>
                    <option value="Presentation">Презентации</option>
                    <option value="Pdf">PDF</option>
                    <option value="Image">Изображения</option>
                    <option value="Archive">Архивы</option>
                </select>

                <label class="checkbox-label">
                    <input type="checkbox" id="onlyMyFiles" @(Model.SearchRequest.OnlyMyFiles ? "checked" : "") />
                    Только мои файлы
                </label>
                <button class="btn btn-secondary" type="button" onclick="toggleAdvanced()">Фильтры</button>
            </div>
        </div>
    </div>

    <div id="advancedFilters" style="display:none" class="advanced-filters">
        <div>
            <label>Дата создания от:</label>
            <input type="date" id="dateFrom" value="@Model.SearchRequest.DateFrom?.ToString("yyyy-MM-dd")" />
            <label>до:</label>
            <input type="date" id="dateTo" value="@Model.SearchRequest.DateTo?.ToString("yyyy-MM-dd")" />
        </div>
        <div>
            <label>Дата изменения от:</label>
            <input type="date" id="updatedFrom" value="@Model.SearchRequest.UpdatedFrom?.ToString("yyyy-MM-dd")" />
            <label>до:</label>
            <input type="date" id="updatedTo" value="@Model.SearchRequest.UpdatedTo?.ToString("yyyy-MM-dd")" />
        </div>
        <div>
            <label>Расширение:</label>
            <input type="text" id="extension" value="@Model.SearchRequest.Extension" />
            <label>Размер от (байт):</label>
            <input type="number" id="minSize" value="@Model.SearchRequest.MinSizeBytes" />
            <label>до:</label>
            <input type="number" id="maxSize" value="@Model.SearchRequest.MaxSizeBytes" />
        </div>
        <div>
            <label>Теги:</label>
            <input type="text" id="tags" value="@Model.SearchRequest.Tags" />
            <label>Владелец (GUID):</label>
            <input type="text" id="ownerId" value="@Model.SearchRequest.OwnerId" />
        </div>
        <button class="btn btn-primary" type="button" onclick="applyFilters()">Применить</button>
    </div>

    <!-- Breadcrumbs -->
    @if (Model.Breadcrumbs.Any())
    {
        <div class="breadcrumbs">
            @for (int i = 0; i < Model.Breadcrumbs.Count; i++)
            {
                var breadcrumb = Model.Breadcrumbs[i];
                <span class="breadcrumb-item">
                    @if (i == Model.Breadcrumbs.Count - 1)
                    {
                        <span>@breadcrumb.Icon @breadcrumb.Name</span>
                    }
                    else
                    {
                        <a href="?folderId=@breadcrumb.Id&view=@Model.ViewMode">@breadcrumb.Icon @breadcrumb.Name</a>
                        <span class="breadcrumb-separator">/</span>
                    }
                </span>
            }
        </div>
    }

    <!-- Content Area -->
    <div class="content-area">
        @if (Model.ViewMode == "tree")
        {
            <div class="tree-view">
                @if (Model.TreeStructure.Any())
                {
                    <div id="treeContainer" class="tree-container">
                        @foreach (var node in Model.TreeStructure)
                        {
                            @await Html.PartialAsync("_TreeNode", node)
                        }
                    </div>
                }
                else
                {
                    <div class="empty-state">
                        <div style="font-size: 64px; margin-bottom: 20px;">📁</div>
                        <h3>Нет доступных папок</h3>
                        <p>У вас пока нет доступа к папкам или они не созданы</p>
                    </div>
                }
            </div>
        }
        else if (Model.ViewMode == "grid")
        {
            <div class="grid-view">
                @await Html.PartialAsync("_FilesGrid", Model.FilesResult)
            </div>
        }
        else
        {
            <div class="list-view">
                @await Html.PartialAsync("_FilesList", Model.FilesResult)
            </div>
        }
    </div>

    <!-- Pagination -->
    @if (Model.FilesResult.TotalPages > 1)
    {
        <div class="pagination">
            @if (Model.FilesResult.HasPreviousPage)
            {
                <a href="?page=@(Model.FilesResult.CurrentPage - 1)&folderId=@Model.CurrentFolderId&view=@Model.ViewMode" class="btn btn-pagination">← Предыдущая</a>
            }

            <span class="pagination-info">
                Страница @Model.FilesResult.CurrentPage из @Model.FilesResult.TotalPages
                (всего: @Model.FilesResult.TotalCount)
            </span>

            @if (Model.FilesResult.HasNextPage)
            {
                <a href="?page=@(Model.FilesResult.CurrentPage + 1)&folderId=@Model.CurrentFolderId&view=@Model.ViewMode" class="btn btn-pagination">Следующая →</a>
            }
        </div>
    }
</div>

@await Html.PartialAsync("_UploadModal")
