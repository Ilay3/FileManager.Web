@model FileManager.Application.DTOs.SearchResultDto<FileManager.Application.DTOs.FileDto>

@if (Model.Items.Any())
{
        <div class="sort-controls">
            <span>Сортировка:</span>
            <a href="javascript:void(0)" onclick="sortBy('name')" class="sort-link">По имени</a>
            <a href="javascript:void(0)" onclick="sortBy('date')" class="sort-link">По дате</a>
            <a href="javascript:void(0)" onclick="sortBy('size')" class="sort-link">По размеру</a>
            <a href="javascript:void(0)" onclick="sortBy('type')" class="sort-link">По типу</a>
        </div>

        <div class="files-grid">
        @foreach (var file in Model.Items)
        {
                    <div class="file-card" data-file-id="@file.Id">
                        <div class="file-card-icon">
                    @file.FileIcon
                        </div>
                        <div class="file-card-content">
                            <h4 class="file-card-title" title="@file.Name">@file.Name</h4>
                            <p class="file-card-info">
                                <span class="file-size">@file.FormattedSize</span>
                                <span class="file-date">@(file.UpdatedAt?.ToString("dd.MM.yyyy") ?? file.CreatedAt.ToString("dd.MM.yyyy"))</span>
                            </p>
                            <p class="file-card-author">@file.UploadedByName</p>
                    @if (!string.IsNullOrEmpty(file.Tags))
                    {
                                    <div class="file-card-tags">
                            @foreach (var tag in file.Tags.Split(',').Take(3))
                            {
                                                <span class="tag">@tag.Trim()</span>
                            }
                                    </div>
                    }
                        </div>
                        <div class="file-card-actions">
                            <button class="btn btn-small" onclick="viewFile('@file.Id')" title="Просмотр">
                                👁️
                            </button>
                            <button class="btn btn-small" onclick="downloadFile('@file.Id')" title="Скачать">
                                ⬇️
                            </button>
                            <button class="btn btn-small" onclick="deleteFile('@file.Id', '@file.Name')" title="Удалить">
                                🗑️
                            </button>
                        </div>
                    </div>
        }
        </div>
}
else
{
        <div class="empty-state">
            <div style="font-size: 64px; margin-bottom: 20px;">📄</div>
            <h3>Файлы не найдены</h3>
            <p style="color: #999; margin-bottom: 30px;">
            @if (!string.IsNullOrEmpty(ViewContext.HttpContext.Request.Query["SearchRequest.SearchTerm"]))
            {
                        <span>По вашему запросу ничего не найдено. Попробуйте изменить критерии поиска.</span>
            }
            else
            {
                        <span>В данной папке пока нет файлов. Загрузите первый файл, чтобы начать работу.</span>
            }
            </p>
            <button class="btn btn-primary" onclick="alert('Функция загрузки будет добавлена в следующем этапе')">
                📤 Загрузить файл
            </button>
        </div>
}

<script>
    function sortBy(field) {
        const params = new URLSearchParams(window.location.search);
        const currentSort = params.get('SearchRequest.SortBy');
        const currentDirection = params.get('SearchRequest.SortDirection') || 'asc';

        // Toggle direction if same field
        const newDirection = (currentSort === field && currentDirection === 'asc') ? 'desc' : 'asc';

        params.set('SearchRequest.SortBy', field);
        params.set('SearchRequest.SortDirection', newDirection);
        params.set('SearchRequest.Page', '1'); // Reset to first page

        window.location.search = params.toString();
    }
</script>
